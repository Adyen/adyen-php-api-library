<?php
/**
 * Adyen Payment API
 *
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v68/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v68/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 68
 * Contact: developer-experience@adyen.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Adyen\Service\Payments;

use Adyen\AdyenException;
use Adyen\Client;
use Adyen\Service;
use Adyen\Model\Payments\ObjectSerializer;

class GeneralApi extends Service
{
    /**
     * @var array|string|string[]
     */
    private $baseURL;

    /**
     * GeneralApi constructor.
     *
     * @param \Adyen\Client $client
     * @throws AdyenException
     */
    public function __construct(Client $client)
    {
        parent::__construct($client);

        // Create the baseUrl based on live/test and optional live-url-prefix
        $this->baseURL = $this->createBaseUrl("https://pal-test.adyen.com/pal/servlet/Payment/v68");
    }

    /**
    * Create an authorisation
    *
    * @param \Adyen\Model\Payments\PaymentRequest $paymentRequest
    * @param array $requestOptions
    * @return \Adyen\Model\Payments\PaymentResult
    * @throws AdyenException
    */
    public function authorise(\Adyen\Model\Payments\PaymentRequest $paymentRequest, array $requestOptions = null): \Adyen\Model\Payments\PaymentResult
    {
        $endpoint = $this->baseURL . "/authorise";
        $response = $this->requestHttp($endpoint, strtolower('POST'), (array) $paymentRequest->jsonSerialize(), $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Payments\PaymentResult::class);
    }

    /**
    * Complete a 3DS authorisation
    *
    * @param \Adyen\Model\Payments\PaymentRequest3d $paymentRequest3d
    * @param array $requestOptions
    * @return \Adyen\Model\Payments\PaymentResult
    * @throws AdyenException
    */
    public function authorise3d(\Adyen\Model\Payments\PaymentRequest3d $paymentRequest3d, array $requestOptions = null): \Adyen\Model\Payments\PaymentResult
    {
        $endpoint = $this->baseURL . "/authorise3d";
        $response = $this->requestHttp($endpoint, strtolower('POST'), (array) $paymentRequest3d->jsonSerialize(), $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Payments\PaymentResult::class);
    }

    /**
    * Complete a 3DS2 authorisation
    *
    * @param \Adyen\Model\Payments\PaymentRequest3ds2 $paymentRequest3ds2
    * @param array $requestOptions
    * @return \Adyen\Model\Payments\PaymentResult
    * @throws AdyenException
    */
    public function authorise3ds2(\Adyen\Model\Payments\PaymentRequest3ds2 $paymentRequest3ds2, array $requestOptions = null): \Adyen\Model\Payments\PaymentResult
    {
        $endpoint = $this->baseURL . "/authorise3ds2";
        $response = $this->requestHttp($endpoint, strtolower('POST'), (array) $paymentRequest3ds2->jsonSerialize(), $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Payments\PaymentResult::class);
    }

    /**
    * Get the 3DS authentication result
    *
    * @param \Adyen\Model\Payments\AuthenticationResultRequest $authenticationResultRequest
    * @param array $requestOptions
    * @return \Adyen\Model\Payments\AuthenticationResultResponse
    * @throws AdyenException
    */
    public function getAuthenticationResult(\Adyen\Model\Payments\AuthenticationResultRequest $authenticationResultRequest, array $requestOptions = null): \Adyen\Model\Payments\AuthenticationResultResponse
    {
        $endpoint = $this->baseURL . "/getAuthenticationResult";
        $response = $this->requestHttp($endpoint, strtolower('POST'), (array) $authenticationResultRequest->jsonSerialize(), $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Payments\AuthenticationResultResponse::class);
    }

    /**
    * Get the 3DS2 authentication result
    *
    * @param \Adyen\Model\Payments\ThreeDS2ResultRequest $threeDs2ResultRequest
    * @param array $requestOptions
    * @return \Adyen\Model\Payments\ThreeDS2ResultResponse
    * @throws AdyenException
    */
    public function retrieve3ds2Result(\Adyen\Model\Payments\ThreeDS2ResultRequest $threeDs2ResultRequest, array $requestOptions = null): \Adyen\Model\Payments\ThreeDS2ResultResponse
    {
        $endpoint = $this->baseURL . "/retrieve3ds2Result";
        $response = $this->requestHttp($endpoint, strtolower('POST'), (array) $threeDs2ResultRequest->jsonSerialize(), $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Payments\ThreeDS2ResultResponse::class);
    }
}
