<?php
/**
 * Legal Entity Management API
 *
 * The Legal Entity Management API enables you to manage legal entities that contain information required for verification.  ## Authentication To connect to the Legal Entity Management API, you must use the basic authentication credentials of your web service user. If you don't have one, contact the [Adyen Support Team](https://www.adyen.help/hc/en-us/requests/new). Use the web service user credentials to authenticate your request, for example:  ``` curl -U \"ws_123456@Scope.BalancePlatform_YourBalancePlatform\":\"YourWsPassword\" \\ -H \"Content-Type: application/json\" \\ ... ``` Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning The Legal Entity Management API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://kyc-test.adyen.com/lem/v3/legalEntities ``` ## Going live When going live, your Adyen contact will provide your API credential for the live environment. You can then use the username and password to send requests to `https://kyc-live.adyen.com/lem/v3`.
 *
 * The version of the OpenAPI document: 3
 * Contact: developer-experience@adyen.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Adyen\Service\LegalEntityManagement;

use Adyen\AdyenException;
use Adyen\Client;
use Adyen\Service;
use Adyen\Model\LegalEntityManagement\ObjectSerializer;

class BusinessLinesApi extends Service
{
    /**
     * @var array|string|string[]
     */
    private $baseURL;

    /**
     * BusinessLinesApi constructor.
     *
     * @param \Adyen\Client $client
     * @throws AdyenException
     */
    public function __construct(Client $client)
    {
        parent::__construct($client);

        // Create the baseUrl based on live/test and optional live-url-prefix
        $this->baseURL = $this->createBaseUrl("https://kyc-test.adyen.com/lem/v3");
    }

    /**
    * Delete a business line
    *
    * @param string $id
    * @param array $requestOptions

    * @throws AdyenException
    */
    public function deleteBusinessLine(string $id, array $requestOptions = null)
    {
        $endpoint = $this->baseURL . str_replace(['{id}'], [$id], "/businessLines/{id}");
        $this->requestHttp($endpoint, strtolower('DELETE'), null, $requestOptions);
    }

    /**
    * Get a business line
    *
    * @param string $id
    * @param array $requestOptions
    * @return \Adyen\Model\LegalEntityManagement\BusinessLine
    * @throws AdyenException
    */
    public function getBusinessLine(string $id, array $requestOptions = null): \Adyen\Model\LegalEntityManagement\BusinessLine
    {
        $endpoint = $this->baseURL . str_replace(['{id}'], [$id], "/businessLines/{id}");
        $response = $this->requestHttp($endpoint, strtolower('GET'), null, $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\LegalEntityManagement\BusinessLine::class);
    }

    /**
    * Update a business line
    *
    * @param string $id
    * @param \Adyen\Model\LegalEntityManagement\BusinessLineInfoUpdate $businessLineInfoUpdate
    * @param array $requestOptions
    * @return \Adyen\Model\LegalEntityManagement\BusinessLine
    * @throws AdyenException
    */
    public function updateBusinessLine(string $id, \Adyen\Model\LegalEntityManagement\BusinessLineInfoUpdate $businessLineInfoUpdate, array $requestOptions = null): \Adyen\Model\LegalEntityManagement\BusinessLine
    {
        $endpoint = $this->baseURL . str_replace(['{id}'], [$id], "/businessLines/{id}");
        $response = $this->requestHttp($endpoint, strtolower('PATCH'), (array) $businessLineInfoUpdate->jsonSerialize(), $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\LegalEntityManagement\BusinessLine::class);
    }

    /**
    * Create a business line
    *
    * @param \Adyen\Model\LegalEntityManagement\BusinessLineInfo $businessLineInfo
    * @param array $requestOptions
    * @return \Adyen\Model\LegalEntityManagement\BusinessLine
    * @throws AdyenException
    */
    public function createBusinessLine(\Adyen\Model\LegalEntityManagement\BusinessLineInfo $businessLineInfo, array $requestOptions = null): \Adyen\Model\LegalEntityManagement\BusinessLine
    {
        $endpoint = $this->baseURL . "/businessLines";
        $response = $this->requestHttp($endpoint, strtolower('POST'), (array) $businessLineInfo->jsonSerialize(), $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\LegalEntityManagement\BusinessLine::class);
    }
}
