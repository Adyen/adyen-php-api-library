<?php
/**
 * Adyen Payment API
 *
 * The version of the OpenAPI document: 68
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Adyen\Service\Payment;

use Adyen\AdyenException;
use Adyen\Client;
use Adyen\Service;
use Adyen\Model\Payment\ObjectSerializer;

class ModificationsApi extends Service
{
    /**
     * @var array|string|string[]
     */
    private $baseURL;

    /**
     * ModificationsApi constructor.
     *
     * @param \Adyen\Client $client
     * @throws AdyenException
     */
    public function __construct(Client $client)
    {
        parent::__construct($client);

        // Create the baseUrl based on live/test and optional live-url-prefix
        $this->baseURL = $this->createBaseUrl("https://pal-test.adyen.com/pal/servlet/Payment/v68");
    }

    /**
    * Change the authorised amount
    *
    * @param \Adyen\Model\Payment\AdjustAuthorisationRequest $adjustAuthorisationRequest
    * @param array|null $requestOptions
    * @return \Adyen\Model\Payment\ModificationResult
    * @throws AdyenException
    */
    public function adjustAuthorisation(\Adyen\Model\Payment\AdjustAuthorisationRequest $adjustAuthorisationRequest, array $requestOptions = null): \Adyen\Model\Payment\ModificationResult
    {
        $endpoint = $this->baseURL . "/adjustAuthorisation";
        $response = $this->requestHttp($endpoint, strtolower('POST'), (array) $adjustAuthorisationRequest->jsonSerialize(), $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Payment\ModificationResult::class);
    }

    /**
    * Cancel an authorisation
    *
    * @param \Adyen\Model\Payment\CancelRequest $cancelRequest
    * @param array|null $requestOptions
    * @return \Adyen\Model\Payment\ModificationResult
    * @throws AdyenException
    */
    public function cancel(\Adyen\Model\Payment\CancelRequest $cancelRequest, array $requestOptions = null): \Adyen\Model\Payment\ModificationResult
    {
        $endpoint = $this->baseURL . "/cancel";
        $response = $this->requestHttp($endpoint, strtolower('POST'), (array) $cancelRequest->jsonSerialize(), $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Payment\ModificationResult::class);
    }

    /**
    * Cancel or refund a payment
    *
    * @param \Adyen\Model\Payment\CancelOrRefundRequest $cancelOrRefundRequest
    * @param array|null $requestOptions
    * @return \Adyen\Model\Payment\ModificationResult
    * @throws AdyenException
    */
    public function cancelOrRefund(\Adyen\Model\Payment\CancelOrRefundRequest $cancelOrRefundRequest, array $requestOptions = null): \Adyen\Model\Payment\ModificationResult
    {
        $endpoint = $this->baseURL . "/cancelOrRefund";
        $response = $this->requestHttp($endpoint, strtolower('POST'), (array) $cancelOrRefundRequest->jsonSerialize(), $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Payment\ModificationResult::class);
    }

    /**
    * Capture an authorisation
    *
    * @param \Adyen\Model\Payment\CaptureRequest $captureRequest
    * @param array|null $requestOptions
    * @return \Adyen\Model\Payment\ModificationResult
    * @throws AdyenException
    */
    public function capture(\Adyen\Model\Payment\CaptureRequest $captureRequest, array $requestOptions = null): \Adyen\Model\Payment\ModificationResult
    {
        $endpoint = $this->baseURL . "/capture";
        $response = $this->requestHttp($endpoint, strtolower('POST'), (array) $captureRequest->jsonSerialize(), $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Payment\ModificationResult::class);
    }

    /**
    * Create a donation
    *
    * @param \Adyen\Model\Payment\DonationRequest $donationRequest
    * @param array|null $requestOptions
    * @return \Adyen\Model\Payment\ModificationResult
    * @throws AdyenException
    */
    public function donate(\Adyen\Model\Payment\DonationRequest $donationRequest, array $requestOptions = null): \Adyen\Model\Payment\ModificationResult
    {
        $endpoint = $this->baseURL . "/donate";
        $response = $this->requestHttp($endpoint, strtolower('POST'), (array) $donationRequest->jsonSerialize(), $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Payment\ModificationResult::class);
    }

    /**
    * Refund a captured payment
    *
    * @param \Adyen\Model\Payment\RefundRequest $refundRequest
    * @param array|null $requestOptions
    * @return \Adyen\Model\Payment\ModificationResult
    * @throws AdyenException
    */
    public function refund(\Adyen\Model\Payment\RefundRequest $refundRequest, array $requestOptions = null): \Adyen\Model\Payment\ModificationResult
    {
        $endpoint = $this->baseURL . "/refund";
        $response = $this->requestHttp($endpoint, strtolower('POST'), (array) $refundRequest->jsonSerialize(), $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Payment\ModificationResult::class);
    }

    /**
    * Cancel an authorisation using your reference
    *
    * @param \Adyen\Model\Payment\TechnicalCancelRequest $technicalCancelRequest
    * @param array|null $requestOptions
    * @return \Adyen\Model\Payment\ModificationResult
    * @throws AdyenException
    */
    public function technicalCancel(\Adyen\Model\Payment\TechnicalCancelRequest $technicalCancelRequest, array $requestOptions = null): \Adyen\Model\Payment\ModificationResult
    {
        $endpoint = $this->baseURL . "/technicalCancel";
        $response = $this->requestHttp($endpoint, strtolower('POST'), (array) $technicalCancelRequest->jsonSerialize(), $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Payment\ModificationResult::class);
    }

    /**
    * Cancel an in-person refund
    *
    * @param \Adyen\Model\Payment\VoidPendingRefundRequest $voidPendingRefundRequest
    * @param array|null $requestOptions
    * @return \Adyen\Model\Payment\ModificationResult
    * @throws AdyenException
    */
    public function voidPendingRefund(\Adyen\Model\Payment\VoidPendingRefundRequest $voidPendingRefundRequest, array $requestOptions = null): \Adyen\Model\Payment\ModificationResult
    {
        $endpoint = $this->baseURL . "/voidPendingRefund";
        $response = $this->requestHttp($endpoint, strtolower('POST'), (array) $voidPendingRefundRequest->jsonSerialize(), $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Payment\ModificationResult::class);
    }
}
