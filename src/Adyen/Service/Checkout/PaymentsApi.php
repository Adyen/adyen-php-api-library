<?php
/**
 * Adyen Checkout API
 *
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v70/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v70/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=70) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 70
 * Contact: developer-experience@adyen.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.3.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Adyen\Service\Checkout;

use Adyen\AdyenException;
use Adyen\Client;
use Adyen\Service;
use Adyen\Model\Checkout\ObjectSerializer;

class PaymentsApi extends Service
{
    /**
     * PaymentsApi constructor.
     *
     * @param \Adyen\Client $client
     * @throws AdyenException
     */
    public function __construct(Client $client)
    {
        parent::__construct($client);
        $this->baseURL = $client->getConfig()->get('endpointCheckout') . "/" . $client->getApiCheckoutVersion();
    }

    /**
    * Get the list of brands on the card
    *
    * @param string $idempotencyKey
    * @param \Adyen\Model\Checkout\CardDetailsRequest $cardDetailsRequest
    * @param array $requestOptions
    * @return \Adyen\Model\Checkout\CardDetailsResponse
    * @throws AdyenException
    */
    public function listBrandsOnCard(\Adyen\Model\Checkout\CardDetailsRequest $cardDetailsRequest, $requestOptions = null): \Adyen\Model\Checkout\CardDetailsResponse
    {
        $endpoint = $this->baseURL . "/cardDetails";
        $response = $this->requestHttp($endpoint, strtolower('POST'), (array) $cardDetailsRequest->jsonSerialize(), $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Checkout\CardDetailsResponse::class);
    }

    /**
    * Start a transaction for donations
    *
    * @param string $idempotencyKey
    * @param \Adyen\Model\Checkout\PaymentDonationRequest $paymentDonationRequest
    * @param array $requestOptions
    * @return \Adyen\Model\Checkout\DonationResponse
    * @throws AdyenException
    */
    public function donations(\Adyen\Model\Checkout\PaymentDonationRequest $paymentDonationRequest, $requestOptions = null): \Adyen\Model\Checkout\DonationResponse
    {
        $endpoint = $this->baseURL . "/donations";
        $response = $this->requestHttp($endpoint, strtolower('POST'), (array) $paymentDonationRequest->jsonSerialize(), $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Checkout\DonationResponse::class);
    }

    /**
    * Get a list of available payment methods
    *
    * @param string $idempotencyKey
    * @param \Adyen\Model\Checkout\PaymentMethodsRequest $paymentMethodsRequest
    * @param array $requestOptions
    * @return \Adyen\Model\Checkout\PaymentMethodsResponse
    * @throws AdyenException
    */
    public function paymentMethods(\Adyen\Model\Checkout\PaymentMethodsRequest $paymentMethodsRequest, $requestOptions = null): \Adyen\Model\Checkout\PaymentMethodsResponse
    {
        $endpoint = $this->baseURL . "/paymentMethods";
        $response = $this->requestHttp($endpoint, strtolower('POST'), (array) $paymentMethodsRequest->jsonSerialize(), $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Checkout\PaymentMethodsResponse::class);
    }

    /**
    * Start a transaction
    *
    * @param string $idempotencyKey
    * @param \Adyen\Model\Checkout\PaymentRequest $paymentRequest
    * @param array $requestOptions
    * @return \Adyen\Model\Checkout\PaymentResponse
    * @throws AdyenException
    */
    public function payments(\Adyen\Model\Checkout\PaymentRequest $paymentRequest, $requestOptions = null): \Adyen\Model\Checkout\PaymentResponse
    {
        $endpoint = $this->baseURL . "/payments";
        $response = $this->requestHttp($endpoint, strtolower('POST'), (array) $paymentRequest->jsonSerialize(), $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Checkout\PaymentResponse::class);
    }

    /**
    * Submit details for a payment
    *
    * @param string $idempotencyKey
    * @param \Adyen\Model\Checkout\DetailsRequest $detailsRequest
    * @param array $requestOptions
    * @return \Adyen\Model\Checkout\PaymentDetailsResponse
    * @throws AdyenException
    */
    public function paymentsDetails(\Adyen\Model\Checkout\DetailsRequest $detailsRequest, $requestOptions = null): \Adyen\Model\Checkout\PaymentDetailsResponse
    {
        $endpoint = $this->baseURL . "/payments/details";
        $response = $this->requestHttp($endpoint, strtolower('POST'), (array) $detailsRequest->jsonSerialize(), $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Checkout\PaymentDetailsResponse::class);
    }

    /**
    * Create a payment session
    *
    * @param string $idempotencyKey
    * @param \Adyen\Model\Checkout\CreateCheckoutSessionRequest $createCheckoutSessionRequest
    * @param array $requestOptions
    * @return \Adyen\Model\Checkout\CreateCheckoutSessionResponse
    * @throws AdyenException
    */
    public function sessions(\Adyen\Model\Checkout\CreateCheckoutSessionRequest $createCheckoutSessionRequest, $requestOptions = null): \Adyen\Model\Checkout\CreateCheckoutSessionResponse
    {
        $endpoint = $this->baseURL . "/sessions";
        $response = $this->requestHttp($endpoint, strtolower('POST'), (array) $createCheckoutSessionRequest->jsonSerialize(), $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Checkout\CreateCheckoutSessionResponse::class);
    }
}
