<?php
/**
 * Management API
 *
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to version 1 of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v1/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v1 ```
 *
 * The version of the OpenAPI document: 1
 * Contact: developer-experience@adyen.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Adyen\Service\Management;

use Adyen\AdyenException;
use Adyen\Client;
use Adyen\Service;
use Adyen\Model\Management\ObjectSerializer;

class TerminalOrdersMerchantLevelApi extends Service
{
    /**
     * @var array|string|string[]
     */
    private $baseURL;

    /**
     * TerminalOrdersMerchantLevelApi constructor.
     *
     * @param \Adyen\Client $client
     * @throws AdyenException
     */
    public function __construct(Client $client)
    {
        parent::__construct($client);

        // Create the baseUrl based on live/test and optional live-url-prefix
        $this->baseURL = $this->createBaseUrl("https://management-test.adyen.com/v1");
    }

    /**
    * Get a list of billing entities
    *
    * @param string $merchantId
    * @param string $name
    * @param array $requestOptions
    * @return \Adyen\Model\Management\BillingEntitiesResponse
    * @throws AdyenException
    */
    public function listBillingEntities(string $merchantId, array $requestOptions = null): \Adyen\Model\Management\BillingEntitiesResponse
    {
        $endpoint = $this->baseURL . str_replace(['{merchantId}'], [$merchantId], "/merchants/{merchantId}/billingEntities");
        $response = $this->requestHttp($endpoint, strtolower('GET'), null, $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Management\BillingEntitiesResponse::class);
    }

    /**
    * Get a list of shipping locations
    *
    * @param string $merchantId
    * @param string $name
    * @param int $offset
    * @param int $limit
    * @param array $requestOptions
    * @return \Adyen\Model\Management\ShippingLocationsResponse
    * @throws AdyenException
    */
    public function listShippingLocations(string $merchantId, array $requestOptions = null): \Adyen\Model\Management\ShippingLocationsResponse
    {
        $endpoint = $this->baseURL . str_replace(['{merchantId}'], [$merchantId], "/merchants/{merchantId}/shippingLocations");
        $response = $this->requestHttp($endpoint, strtolower('GET'), null, $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Management\ShippingLocationsResponse::class);
    }

    /**
    * Get a list of terminal models
    *
    * @param string $merchantId
    * @param array $requestOptions
    * @return \Adyen\Model\Management\TerminalModelsResponse
    * @throws AdyenException
    */
    public function listTerminalModels(string $merchantId, array $requestOptions = null): \Adyen\Model\Management\TerminalModelsResponse
    {
        $endpoint = $this->baseURL . str_replace(['{merchantId}'], [$merchantId], "/merchants/{merchantId}/terminalModels");
        $response = $this->requestHttp($endpoint, strtolower('GET'), null, $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Management\TerminalModelsResponse::class);
    }

    /**
    * Get a list of orders
    *
    * @param string $merchantId
    * @param string $customerOrderReference
    * @param string $status
    * @param int $offset
    * @param int $limit
    * @param array $requestOptions
    * @return \Adyen\Model\Management\TerminalOrdersResponse
    * @throws AdyenException
    */
    public function listOrders(string $merchantId, array $requestOptions = null): \Adyen\Model\Management\TerminalOrdersResponse
    {
        $endpoint = $this->baseURL . str_replace(['{merchantId}'], [$merchantId], "/merchants/{merchantId}/terminalOrders");
        $response = $this->requestHttp($endpoint, strtolower('GET'), null, $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Management\TerminalOrdersResponse::class);
    }

    /**
    * Get an order
    *
    * @param string $merchantId
    * @param string $orderId
    * @param array $requestOptions
    * @return \Adyen\Model\Management\TerminalOrder
    * @throws AdyenException
    */
    public function getOrder(string $merchantId, string $orderId, array $requestOptions = null): \Adyen\Model\Management\TerminalOrder
    {
        $endpoint = $this->baseURL . str_replace(['{merchantId}', '{orderId}'], [$merchantId, $orderId], "/merchants/{merchantId}/terminalOrders/{orderId}");
        $response = $this->requestHttp($endpoint, strtolower('GET'), null, $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Management\TerminalOrder::class);
    }

    /**
    * Get a list of terminal products
    *
    * @param string $merchantId
    * @param string $country
    * @param string $terminalModelId
    * @param int $offset
    * @param int $limit
    * @param array $requestOptions
    * @return \Adyen\Model\Management\TerminalProductsResponse
    * @throws AdyenException
    */
    public function listTerminalProducts(string $merchantId, array $requestOptions = null): \Adyen\Model\Management\TerminalProductsResponse
    {
        $endpoint = $this->baseURL . str_replace(['{merchantId}'], [$merchantId], "/merchants/{merchantId}/terminalProducts");
        $response = $this->requestHttp($endpoint, strtolower('GET'), null, $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Management\TerminalProductsResponse::class);
    }

    /**
    * Update an order
    *
    * @param string $merchantId
    * @param string $orderId
    * @param \Adyen\Model\Management\TerminalOrderRequest $terminalOrderRequest
    * @param array $requestOptions
    * @return \Adyen\Model\Management\TerminalOrder
    * @throws AdyenException
    */
    public function updateOrder(string $merchantId, string $orderId, \Adyen\Model\Management\TerminalOrderRequest $terminalOrderRequest, array $requestOptions = null): \Adyen\Model\Management\TerminalOrder
    {
        $endpoint = $this->baseURL . str_replace(['{merchantId}', '{orderId}'], [$merchantId, $orderId], "/merchants/{merchantId}/terminalOrders/{orderId}");
        $response = $this->requestHttp($endpoint, strtolower('PATCH'), (array) $terminalOrderRequest->jsonSerialize(), $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Management\TerminalOrder::class);
    }

    /**
    * Create a shipping location
    *
    * @param string $merchantId
    * @param \Adyen\Model\Management\ShippingLocation $shippingLocation
    * @param array $requestOptions
    * @return \Adyen\Model\Management\ShippingLocation
    * @throws AdyenException
    */
    public function createShippingLocation(string $merchantId, \Adyen\Model\Management\ShippingLocation $shippingLocation, array $requestOptions = null): \Adyen\Model\Management\ShippingLocation
    {
        $endpoint = $this->baseURL . str_replace(['{merchantId}'], [$merchantId], "/merchants/{merchantId}/shippingLocations");
        $response = $this->requestHttp($endpoint, strtolower('POST'), (array) $shippingLocation->jsonSerialize(), $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Management\ShippingLocation::class);
    }

    /**
    * Create an order
    *
    * @param string $merchantId
    * @param \Adyen\Model\Management\TerminalOrderRequest $terminalOrderRequest
    * @param array $requestOptions
    * @return \Adyen\Model\Management\TerminalOrder
    * @throws AdyenException
    */
    public function createOrder(string $merchantId, \Adyen\Model\Management\TerminalOrderRequest $terminalOrderRequest, array $requestOptions = null): \Adyen\Model\Management\TerminalOrder
    {
        $endpoint = $this->baseURL . str_replace(['{merchantId}'], [$merchantId], "/merchants/{merchantId}/terminalOrders");
        $response = $this->requestHttp($endpoint, strtolower('POST'), (array) $terminalOrderRequest->jsonSerialize(), $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Management\TerminalOrder::class);
    }

    /**
    * Cancel an order
    *
    * @param string $merchantId
    * @param string $orderId
    * @param array $requestOptions
    * @return \Adyen\Model\Management\TerminalOrder
    * @throws AdyenException
    */
    public function cancelOrder(string $merchantId, string $orderId, array $requestOptions = null): \Adyen\Model\Management\TerminalOrder
    {
        $endpoint = $this->baseURL . str_replace(['{merchantId}', '{orderId}'], [$merchantId, $orderId], "/merchants/{merchantId}/terminalOrders/{orderId}/cancel");
        $response = $this->requestHttp($endpoint, strtolower('POST'), null, $requestOptions);
        return ObjectSerializer::deserialize($response, \Adyen\Model\Management\TerminalOrder::class);
    }
}
